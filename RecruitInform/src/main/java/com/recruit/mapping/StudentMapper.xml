<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.recruit.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.recruit.pojo.Student" >
    <id column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="times_of_break_contact" property="timesOfBreakContact" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMapMessage" type="com.recruit.pojo.Message" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="release_time" property="releaseTime" jdbcType="VARCHAR" />
    <result column="deadline" property="deadline" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="issuer" property="issuer" jdbcType="INTEGER" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_private" property="isPrivate" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    student_id, name, mail, password, times_of_break_contact
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <select id="getAllMessage" resultMap="BaseResultMapMessage" parameterType="java.lang.Integer" >
    SELECT message.* from message2student NATURAL join message where student_id=#{studentId,jdbcType=INTEGER}
  </select>
  <select id="check" resultMap="BaseResultMap" >
    SELECT 
	<include refid="Base_Column_List" />
 	from student where student_id=#{0} and password=#{1}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.recruit.pojo.Student" >
    insert into student (student_id, name, mail, 
      password, times_of_break_contact)
    values (#{studentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{timesOfBreakContact,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.recruit.pojo.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="timesOfBreakContact != null" >
        times_of_break_contact,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="timesOfBreakContact != null" >
        #{timesOfBreakContact,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruit.pojo.Student" >
    update student
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="timesOfBreakContact != null" >
        times_of_break_contact = #{timesOfBreakContact,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruit.pojo.Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      times_of_break_contact = #{timesOfBreakContact,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
</mapper>